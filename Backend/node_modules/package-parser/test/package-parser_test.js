var package_parser = require('../lib/package-parser.js');
var fs = require("fs");
/*
  ======== A Handy Little Nodeunit Reference ========
  https://github.com/caolan/nodeunit

  Test methods:
    test.expect(numAssertions)
    test.done()
  Test assertions:
    test.ok(value, [message])
    test.equal(actual, expected, [message])
    test.notEqual(actual, expected, [message])
    test.deepEqual(actual, expected, [message])
    test.notDeepEqual(actual, expected, [message])
    test.strictEqual(actual, expected, [message])
    test.notStrictEqual(actual, expected, [message])
    test.throws(block, [error], [message])
    test.doesNotThrow(block, [error], [message])
    test.ifError(value)
*/

exports['awesome'] = {
  setUp: function(done) {
    // setup here
    done();
  },
  'no args': function(test) {
    test.expect(8);
    var testFileName = process.cwd()+'/.package.json.copy';
    fs.unlink(testFileName, function (err) {
      
    });
    var data = package_parser.getPackageJsonSync();
    test.equal(data.name, 'package-parser', 'Name should be package-parser.');
    test.equal(data.licenses[0].type, 'MIT', 'License type should be MIT.');
    test.ok(data.devDependencies['grunt']);
    
    package_parser.addElement('something', 'somethingElse');

    test.equal(data.something, 'somethingElse', 'The write succeeded.');

    test.equal(typeof data.dependencies, 'undefined', 'No dependencies set');

    package_parser.addElementToSubkey('somepackage', '>=0.0.1', 'dependencies');

    test.ok(data.dependencies['somepackage']);

    
    package_parser.writePackageJsonSync(testFileName);

    var stat;

    try{
      stat = fs.statSync(testFileName);
    } catch(ex) {

    }
    test.ok(stat.isFile);
    test.ok(stat.isFile());
    
    fs.unlink(testFileName, function (err) {
      
    });

    test.done();
  }
};
